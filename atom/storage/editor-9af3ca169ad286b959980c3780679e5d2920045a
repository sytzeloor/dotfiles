{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":0,"width":2560,"height":1440},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/sytze/Sites/ulti_hub","buffers":[{"text":"RACK_ENV=development\nPORT=9303\nMIN_THREADS=10\nMAX_THREADS=10\nWORKERS=2\nDB_REAP_FREQ=10\nDB_POOL=5\nJOBS_PER_FORK=1000\nCOUNT_WORKER=1\nQUEUE=logitouch\nVERBOSE_SCHEDULE=1\nVERBOSE_WORKER=\nDYNAMIC_SCHEDULE=1\nEMAIL_SENDER=no-reply@ultihub.com\n","markers":{"markers":{"1":{"id":1,"range":[[12,18],[12,18]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":126,"goalBufferRange":null,"autoscroll":false,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/ulti_hub/.env","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"71a28a6bb85a7efb8c7c2d6fe172b8fd628207c1","deserializer":"TextBuffer"},{"text":"export PATH=$PWD/bin:$PATH\n","markers":{"markers":{"1":{"id":1,"range":[[1,0],[1,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":130,"goalBufferRange":null,"autoscroll":false,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/ulti_hub/.envrc","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"c6aa571faa1206e4dd49af1cd1b7873fb7934254","deserializer":"TextBuffer"},{"text":"# See https://help.github.com/articles/ignoring-files for more about ignoring files.\n#\n# If you find yourself ignoring temporary files generated by your text editor\n# or operating system, you probably want to add a global ignore instead:\n#   git config --global core.excludesfile '~/.gitignore_global'\n\n# Ignore bundler config.\n/.bundle\n\n# Ignore the default SQLite database.\n/db/*.sqlite3\n/db/*.sqlite3-journal\n\n# Ignore all logfiles and tempfiles.\n/log/*.log\n/tmp\n\n.env\n.ruby-gemset\n.rbenv-gemsets\nconfig/database.yml\nvendor/gems\n.rspec\n.envrc\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":134,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/ulti_hub/.gitignore","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"5d90cf524edc1ecbd1408704c870846a55ae4439","deserializer":"TextBuffer"},{"text":"web: bundle exec puma -C config/puma.rb\nresq: env QUEUES=uh_critical,uh_high,uh_low VERBOSE=1 TERM_CHILD=1 RESQUE_TERM_TIMEOUT=10 bundle exec rake environment resque:work\nsche: env QUEUES=uh_critical,uh_high,uh_low VERBOSE=1 TERM_CHILD=1 RESQUE_TERM_TIMEOUT=10 bundle exec rake environment resque:scheduler\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":138,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/ulti_hub/Procfile","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"23361269e73e05e6ccb4fe3b1ef70eaa37c3bf3f","deserializer":"TextBuffer"},{"text":"class DashboardController < ApplicationController\n  def dashboard\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":267,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/ulti_hub/app/controllers/dashboard_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"0de057a3188c2d305a9a7e3c9656bbde55aa3ea0","deserializer":"TextBuffer"},{"text":"class IntegrationsController < ApplicationController\n  respond_to :js, only: [:index, :show]\n  before_filter :load_resource\n\n  def index\n    respond_with @integrations\n  end\n\n  def show\n    respond_with @integration\n  end\n\n  def new\n    respond_with @integration\n  end\n\n  def create\n    @integration.save\n    respond_with @integration\n  end\n\n  def edit\n    respond_with @integration\n  end\n\n  def update\n    @integration.update_attributes(permitted_params)\n    respond_with @integration\n  end\n\n  def destroy\n    @integration.destroy\n    respond_with @integration, location: integrations_url\n  end\n\n  def test\n    @integration.dispatch_action params[:dispatch_action]\n  end\n\n  private\n\n  def load_resource\n    case params[:action].to_sym\n    when :index\n      @q = Integration.search(params[:q])\n      @integrations = @q.result(distinct: true).page(params[:page])\n    when :new\n      @integration = Integration.new\n    when :create\n      @integration = Integration.new(permitted_params)\n    else\n      @integration = Integration.find(params[:id])\n    end\n  end\n\n  def permitted_params\n    params.require(:integration).permit(:name, :description, :url, :active, :kind, :is_endpoint, integration_options_attributes: [:id, :key, :value, :_destroy])\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[44,41],[44,41]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":271,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/ulti_hub/app/controllers/integrations_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"9cba78436c8aa21763e9c0b2d785eb9037c03402","deserializer":"TextBuffer"},{"text":"# Use this setup block to configure all options available in SimpleForm.\nSimpleForm.setup do |config|\n  # Wrappers are used by the form builder to generate a\n  # complete input. You can remove any component from the\n  # wrapper, change the order or even add your own to the\n  # stack. The options given below are used to wrap the\n  # whole input.\n  config.wrappers :default, class: :input,\n    hint_class: :field_with_hint, error_class: :field_with_errors do |b|\n    ## Extensions enabled by default\n    # Any of these extensions can be disabled for a\n    # given input by passing: `f.input EXTENSION_NAME => false`.\n    # You can make any of these extensions optional by\n    # renaming `b.use` to `b.optional`.\n\n    # Determines whether to use HTML5 (:email, :url, ...)\n    # and required attributes\n    b.use :html5\n\n    # Calculates placeholders automatically from I18n\n    # You can also pass a string as f.input placeholder: \"Placeholder\"\n    b.use :placeholder\n\n    ## Optional extensions\n    # They are disabled unless you pass `f.input EXTENSION_NAME => :lookup`\n    # to the input. If so, they will retrieve the values from the model\n    # if any exists. If you want to enable the lookup for any of those\n    # extensions by default, you can change `b.optional` to `b.use`.\n\n    # Calculates maxlength from length validations for string inputs\n    b.optional :maxlength\n\n    # Calculates pattern from format validations for string inputs\n    b.optional :pattern\n\n    # Calculates min and max from length validations for numeric inputs\n    b.optional :min_max\n\n    # Calculates readonly automatically from readonly attributes\n    b.optional :readonly\n\n    ## Inputs\n    b.use :label_input\n    b.use :hint,  wrap_with: { tag: :span, class: :hint }\n    b.use :error, wrap_with: { tag: :span, class: :error }\n  end\n\n  # The default wrapper to be used by the FormBuilder.\n  config.default_wrapper = :default\n\n  # Define the way to render check boxes / radio buttons with labels.\n  # Defaults to :nested for bootstrap config.\n  #   inline: input + label\n  #   nested: label > input\n  config.boolean_style = :inline\n\n  # Default class for buttons\n  config.button_class = 'btn'\n\n  # Method used to tidy up errors. Specify any Rails Array method.\n  # :first lists the first message for each field.\n  # Use :to_sentence to list all errors for each field.\n  # config.error_method = :first\n\n  # Default tag used for error notification helper.\n  config.error_notification_tag = :div\n\n  # CSS class to add for error notification helper.\n  config.error_notification_class = 'alert alert-danger alert-dismissable'\n\n  # ID to add for error notification helper.\n  # config.error_notification_id = nil\n\n  # Series of attempts to detect a default label method for collection.\n  # config.collection_label_methods = [ :to_label, :name, :title, :to_s ]\n\n  # Series of attempts to detect a default value method for collection.\n  # config.collection_value_methods = [ :id, :to_s ]\n\n  # You can wrap a collection of radio/check boxes in a pre-defined tag, defaulting to none.\n  # config.collection_wrapper_tag = nil\n\n  # You can define the class to use on all collection wrappers. Defaulting to none.\n  # config.collection_wrapper_class = nil\n\n  # You can wrap each item in a collection of radio/check boxes with a tag,\n  # defaulting to :span. Please note that when using :boolean_style = :nested,\n  # SimpleForm will force this option to be a label.\n  # config.item_wrapper_tag = :span\n\n  # You can define a class to use in all item wrappers. Defaulting to none.\n  # config.item_wrapper_class = nil\n\n  # How the label text should be generated altogether with the required text.\n  # config.label_text = lambda { |label, required| \"#{required} #{label}\" }\n\n  # You can define the class to use on all labels. Default is nil.\n  config.label_class = 'control-label'\n\n  # You can define the class to use on all forms. Default is simple_form.\n  # config.form_class = :simple_form\n\n  # You can define which elements should obtain additional classes\n  # config.generate_additional_classes_for = [:wrapper, :label, :input]\n\n  # Whether attributes are required by default (or not). Default is true.\n  # config.required_by_default = true\n\n  # Tell browsers whether to use the native HTML5 validations (novalidate form option).\n  # These validations are enabled in SimpleForm's internal config but disabled by default\n  # in this configuration, which is recommended due to some quirks from different browsers.\n  # To stop SimpleForm from generating the novalidate option, enabling the HTML5 validations,\n  # change this configuration to true.\n  config.browser_validations = false\n\n  # Collection of methods to detect if a file type was given.\n  # config.file_methods = [ :mounted_as, :file?, :public_filename ]\n\n  # Custom mappings for input types. This should be a hash containing a regexp\n  # to match as key, and the input type that will be used when the field name\n  # matches the regexp as value.\n  # config.input_mappings = { /count/ => :integer }\n\n  # Custom wrappers for input types. This should be a hash containing an input\n  # type as key and the wrapper that will be used for all inputs with specified type.\n  # config.wrapper_mappings = { string: :prepend }\n\n  # Default priority for time_zone inputs.\n  # config.time_zone_priority = nil\n\n  # Default priority for country inputs.\n  # config.country_priority = nil\n\n  # When false, do not use translations for labels.\n  # config.translate_labels = true\n\n  # Automatically discover new inputs in Rails' autoload path.\n  # config.inputs_discovery = true\n\n  # Cache SimpleForm inputs discovery\n  # config.cache_discovery = !Rails.env.development?\n\n  # Default class for inputs\n  # config.input_class = nil\nend\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[145,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":406,"goalBufferRange":null,"autoscroll":false},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/ulti_hub/config/initializers/simple_form.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"602f0cfb3a8da2ec2746bdb9d9cc9450770cd9de","deserializer":"TextBuffer"},{"text":"# Use this setup block to configure all options available in SimpleForm.\nSimpleForm.setup do |config|\n  config.input_class = 'form-control'\n  config.boolean_style = :nested\n\n  config.wrappers :bootstrap3, tag: 'div', class: 'form-group', error_class: 'has-error',\n      defaults: { input_html: { class: 'default_class' } } do |b|\n\n    b.use :html5\n    b.use :min_max\n    b.use :maxlength\n    b.use :placeholder\n\n    b.optional :pattern\n    b.optional :readonly\n\n    b.use :label_input\n    b.use :hint,  wrap_with: { tag: 'span', class: 'help-block' }\n    b.use :error, wrap_with: { tag: 'span', class: 'help-block has-error' }\n  end\n\n  config.wrappers :bootstrap3_horizontal, tag: 'div', class: 'form-group', error_class: 'has-error',\n      defaults: { input_html: { class: 'default-class '}, wrapper_html: { class: 'col-md-10'} } do |b|\n\n    b.use :html5\n    b.use :min_max\n    b.use :maxlength\n    b.use :placeholder\n\n    b.optional :pattern\n    b.optional :readonly\n\n    b.use :label\n    b.wrapper :right_column, tag: 'div' do |component|\n      component.use :input\n      component.use :hint,  wrap_with: { tag: 'span', class: 'help-block' }\n      component.use :error, wrap_with: { tag: 'span', class: 'help-block has-error' }\n    end\n  end\n\n  config.wrappers :bootstrap3_group, tag: 'div', class: 'form-group', error_class: 'has-error',\n      defaults: { input_html: { class: 'default-class '} }  do |b|\n\n    b.use :html5\n    b.use :min_max\n    b.use :maxlength\n    b.use :placeholder\n\n    b.optional :pattern\n    b.optional :readonly\n\n    b.use :label\n    b.wrapper :input_group, tag: 'div', class: 'input-group' do |component|\n      component.use :input\n    end\n    b.use :hint,  wrap_with: { tag: 'span', class: 'help-block' }\n    b.use :error, wrap_with: { tag: 'span', class: 'help-block has-error' }\n  end\n\n  config.wrappers :bootstrap3_checkbox, tag: 'div', class: 'checkbox', error_class: 'has-error' do |b|\n\n    b.use :html5\n\n    b.use :label_input\n\n    b.use :hint,  wrap_with: { tag: 'span', class: 'help-block' }\n    b.use :error, wrap_with: { tag: 'span', class: 'help-block has-error' }\n  end\n\n  config.default_wrapper = :bootstrap3\nend\n","markers":{"markers":{"1":{"id":1,"range":[[12,0],[12,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":410,"goalBufferRange":null,"autoscroll":false},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/ulti_hub/config/initializers/simple_form_bootstrap.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"7cf4c985b7d99c171103cdee568fc804a7c052b0","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":126,"softTabs":true,"displayBuffer":{"id":127,"softWrap":false,"editorWidthInChars":387,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/ulti_hub/.env","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":267,"softTabs":true,"displayBuffer":{"id":268,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/ulti_hub/app/controllers/dashboard_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":271,"softTabs":true,"displayBuffer":{"id":272,"softWrap":false,"editorWidthInChars":387,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/ulti_hub/app/controllers/integrations_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":406,"softTabs":true,"displayBuffer":{"id":407,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/ulti_hub/config/initializers/simple_form.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":410,"softTabs":true,"displayBuffer":{"id":411,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/ulti_hub/config/initializers/simple_form_bootstrap.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":130,"softTabs":true,"displayBuffer":{"id":131,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/ulti_hub/.envrc","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":134,"softTabs":true,"displayBuffer":{"id":135,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/ulti_hub/.gitignore","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":138,"softTabs":true,"displayBuffer":{"id":139,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/ulti_hub/Procfile","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/sytze/Sites/ulti_hub/config/initializers/simple_form_bootstrap.rb","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":true,"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/sytze/Sites/ulti_hub/.env":1401960038115,"/Users/sytze/Sites/ulti_hub/app/controllers/dashboard_controller.rb":1401960049306,"/Users/sytze/Sites/ulti_hub/app/controllers/integrations_controller.rb":1402659205067,"/Users/sytze/Sites/ulti_hub/config/initializers/simple_form.rb":1402659212253,"/Users/sytze/Sites/ulti_hub/config/initializers/simple_form_bootstrap.rb":1402659224140,"/Users/sytze/Sites/ulti_hub/.envrc":1401873293780,"/Users/sytze/Sites/ulti_hub/.gitignore":1401873339815,"/Users/sytze/Sites/ulti_hub/Procfile":1401873351149},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":58274},"tree-view":{"directoryExpansionStates":{"app":{"controllers":{},"models":{"service_integrations":{}},"views":{},"workers":{}},"config":{"environments":{},"initializers":{},"locales":{}},"lib":{"tasks":{},"templates":{}},"spec":{"factories":{},"models":{"service_integrations":{}}}},"selectedPath":"/Users/sytze/Sites/ulti_hub/app/views","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":452,"width":200}}}