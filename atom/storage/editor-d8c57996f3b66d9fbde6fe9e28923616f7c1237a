{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":0,"width":2560,"height":1440},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{"/Users/sytze/Sites/Videofy/api/app/views/api/v1/videos/index.json.rabl":"source.ruby"}},"project":{"path":"/Users/sytze/Sites/Videofy/api","buffers":[{"text":"class Authentication < ActiveRecord::Base\n  devise :database_authenticatable, :lockable, :trackable\n\n  belongs_to :user, inverse_of: :authentications\n\n  validates :key, :token, presence: true\n  validates :key, uniqueness: true\n\n  set_callback :initialize, :after, :set_key_and_token\n\n  private\n\n  def set_key_and_token\n    return unless key.blank?\n\n    self.key, self.token = loop do\n      generated = Devise.token_generator.generate(Authentication, :token)\n      break generated unless Authentication.where(key: generated[0]).first\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[4,0],[4,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2025,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/models/authentication.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ddbfc3c0e7e458df22ba869157942937ccec338a","deserializer":"TextBuffer"},{"text":"source 'https://rubygems.org'\n\nruby '2.1.2'\n\n# Bundle edge Rails instead: gem 'rails', github: 'rails/rails'\ngem 'rails', '4.1.0'\n# Use postgresql as the database for Active Record\ngem 'pg'\n# Use SCSS for stylesheets\ngem 'sass-rails', '~> 4.0.3'\n# Use Uglifier as compressor for JavaScript assets\ngem 'uglifier', '>= 1.3.0'\n# Use CoffeeScript for .js.coffee assets and views\ngem 'coffee-rails', '~> 4.0.0'\n# See https://github.com/sstephenson/execjs#readme for more supported runtimes\ngem 'libv8'\ngem 'therubyracer',  platforms: :ruby\n\n# Use jquery as the JavaScript library\ngem 'jquery-rails'\n# Turbolinks makes following links in your web application faster. Read more: https://github.com/rails/turbolinks\ngem 'turbolinks'\n# Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder\ngem 'jbuilder', '~> 2.0'\n# bundle exec rake doc:rails generates the API under doc/api.\ngem 'sdoc', '~> 0.4.0',          group: :doc\n\n# Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring\ngem 'spring',        group: :development\n\n# Use ActiveModel has_secure_password\n# gem 'bcrypt', '~> 3.1.7'\n\n# Use unicorn as the app server\n# gem 'unicorn'\n\n# Use Capistrano for deployment\n# gem 'capistrano-rails', group: :development\n\n# Use debugger\n# gem 'debugger', group: [:development, :test]\n\ngem 'responders'\ngem 'quiet_assets'\ngem 'action_presenter'\ngem 'puma'\ngem 'redis', github: 'redis/redis-rb', branch: 'master', ref: 'abf65e131103421edfd58d6b328228752a1e5a09'\ngem 'resque'\ngem 'resque-scheduler'\ngem 'resque-web', require: 'resque_web'\ngem 'aasm'\ngem 'validates_timeliness'\n# gem 'bson_ext'\n# gem 'mongoid', '~> 4.0.0.beta1', github: 'mongoid/mongoid'\ngem 'rabl', github: 'nesquena/rabl'\ngem 'oj'\ngem 'rails-api'\ngem 'kaminari'\ngem 'devise'\ngem 'public_activity'\ngem 'acts-as-taggable-on'\ngem 'pg_search'\ngem 'cancancan'\n\ngroup :development do\n  gem 'foreman'\nend\n\ngroup :development, :test do\n  gem 'rspec'\n  gem 'rspec-rails'\n  gem 'factory_girl_rails'\n  gem 'ffaker'\n  gem 'simplecov'\nend\n\ngroup :test do\n  gem 'database_cleaner'\n  gem 'shoulda-matchers'\nend\n","markers":{"markers":{"1":{"id":1,"range":[[48,0],[49,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2033,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/Gemfile","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"cc0045f6e2048f7be77ca8f6eb539a495cee98e9","deserializer":"TextBuffer"},{"text":"class Ability\n  include CanCan::Ability\n\n  def initialize(user)\n    user ||= User.new\n\n    # can :manage, :all\n\n    can :read, PublicActivity::Activity\n    can :read, Comment\n    can :read, Like\n    can :read, PromotionCategory\n    can :read, PromotionItem\n    can :read, Tag\n    can :read, User\n    can :read, Video\n    can :read, VideoFile\n\n    unless user.new_record?\n      can :manage, Authentication, user_id: user.id\n      can :create, Like, user_id: user.id\n      can :create, Comment, author_id: user.id\n      can :manage, Video, author_id: user.id\n      can :manage, VideoFile, author_id: user.id\n    end\n    # Define abilities for the passed in user here. For example:\n    #\n    #   user ||= User.new # guest user (not logged in)\n    #   if user.admin?\n    #     can :manage, :all\n    #   else\n    #     can :read, :all\n    #   end\n    #\n    # The first argument to `can` is the action you are giving the user\n    # permission to do.\n    # If you pass :manage it will apply to every action. Other common actions\n    # here are :read, :create, :update and :destroy.\n    #\n    # The second argument is the resource the user can perform the action on.\n    # If you pass :all it will apply to every resource. Otherwise pass a Ruby\n    # class of the resource.\n    #\n    # The third argument is an optional hash of conditions to further filter the\n    # objects.\n    # For example, here the user can only update published articles.\n    #\n    #   can :update, Article, :published => true\n    #\n    # See the wiki for details:\n    # https://github.com/bryanrite/cancancan/wiki/Defining-Abilities\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[23,17],[23,17]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2042,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"2":{"id":2,"range":[[8,15],[16,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"3":{"id":3,"range":[[8,39],[16,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"6":{"id":6,"range":[[8,39],[16,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"7":{"id":7,"range":[[20,11],[20,17]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"8":{"id":8,"range":[[21,11],[21,17]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"9":{"id":9,"range":[[22,11],[22,17]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"10":{"id":10,"range":[[23,11],[23,17]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"11":{"id":11,"range":[[37,23],[37,29]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/models/ability.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"b19bc870513d3da26dff9770dda3d88124b8e9aa","deserializer":"TextBuffer"},{"text":"module Api\n  module V1\n    class ActivitiesController < BaseController\n      before_action :load_user\n      before_action :load_resource\n      authorize_resource class: 'PublicActivity::Activity'\n\n      def index\n        respond_with @activities\n      end\n\n      private\n\n      def load_user\n        @user = params[:user_id] ? User.find(params[:user_id]) : current_user\n      end\n\n      def load_resource\n        case params[:action].to_sym\n        when :index\n          @activities = @user.activities.accessible_by(current_ability).page(params[:page])\n        else\n          @activity = PublicActivity::Activity.find(params[:id])\n        end\n      end\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[20,71],[20,71]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2050,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"3":{"id":3,"range":[[5,6],[5,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"4":{"id":4,"range":[[5,6],[5,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"5":{"id":5,"range":[[5,6],[5,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"6":{"id":6,"range":[[5,6],[5,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"7":{"id":7,"range":[[5,6],[5,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"8":{"id":8,"range":[[20,41],[20,54]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/activities_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"9315b0bf8c2013b3bbf0883e2590a90d188698a6","deserializer":"TextBuffer"},{"text":"module Api\n  module V1\n    class BaseController < Api::BaseController\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[3,0],[3,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2058,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"2":{"id":2,"range":[[3,0],[3,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/base_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"f0f81bd0ad89a20d31b778d952109b094e254948","deserializer":"TextBuffer"},{"text":"class ApplicationController < ActionController::Base\n  # Prevent CSRF attacks by raising an exception.\n  # For APIs, you may want to use :null_session instead.\n  protect_from_forgery with: :exception\nend\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2066,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/controllers/application_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"7afa8bd02d2c49fd8df3c6e372b8520c9f916e8e","deserializer":"TextBuffer"},{"text":"module Api\n  class BaseController < ApplicationController\n    include PublicActivity::StoreController\n\n    skip_before_filter :verify_authenticity_token\n    before_action :authenticate_with_token!, except: [:status]\n\n    check_authorization\n\n    helper 'api/pagination'\n\n    respond_to :json\n\n    def status\n      render json: Status.check\n    end\n\n    def validate_authentication\n      @user = current_user\n      respond_with @user, template: \"/api/#{ENV['ACTIVE_API']}/users/show\"\n    end\n\n    def current_user\n      current_authentication.user if authentication_signed_in?\n    end\n\n    def user_signed_in?\n      authentication_signed_in?\n    end\n\n    def record_activity(object, action = params[:action])\n      return if object.changed?\n      object.create_activity action, owner: current_user\n    end\n\n    private\n\n    rescue_from CanCan::AccessDenied do |exception|\n      render json: { error: exception.message }, status: :forbidden\n    end\n\n    def authenticate_with_token!\n      key = request.headers['HTTP_AUTHENTICATION_KEY']\n      authentication = Authentication.where(key: key).first\n\n      if authentication && Devise.secure_compare(authentication.token, request.headers['HTTP_AUTHENTICATION_TOKEN'])\n        sign_in :authentication, authentication, store: false\n      else\n        render nothing: true, status: authentication ? :forbidden : :unauthorized\n      end\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[35,0],[51,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2082,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/base_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"809f07c4b72d1afce4368ca9ea316a9eb2d22720","deserializer":"TextBuffer"},{"text":"class User < ActiveRecord::Base\n  include PgSearch\n  pg_search_scope :search,\n    against: [:username],\n    using: { trigram: {}, tsearch: { prefix: true }}\n\n  has_many :videos, inverse_of: :author\n  has_many :comments, inverse_of: :author, foreign_key: 'author_id',\n    dependent: :destroy\n  has_many :authentications, inverse_of: :user, dependent: :destroy\n  has_many :followers, inverse_of: :user, dependent: :destroy\n  has_many :followings, inverse_of: :follower, foreign_key: 'follower_id',\n    class_name: 'Follower', dependent: :destroy\n  has_many :liked, inverse_of: :user, foreign_key: 'user_id', class_name: 'Like',\n    dependent: :destroy\n\n  include Promotable\n\n  validates :username, presence: true\n  validates :username, uniqueness: true\n\n  def activities\n    PublicActivity::Activity.order('created_at DESC').where(owner_id: id, owner_type: 'User')\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[25,0],[25,0]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2098,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"2":{"id":2,"range":[[11,12],[11,22]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"3":{"id":3,"range":[[11,12],[11,22]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"4":{"id":4,"range":[[11,61],[11,72]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"5":{"id":5,"range":[[11,61],[11,72]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"6":{"id":6,"range":[[10,12],[10,21]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/models/user.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"103cc6e8f6762b7a1cb4184ab2f187f804f9d781","deserializer":"TextBuffer"},{"text":"module Api\n  module V1\n    class FollowersController < BaseController\n      before_action :load_user, only: [:index, :create]\n      before_action :load_resource\n      after_action :record_activity, only: [:create]\n      authorize_resource\n\n      def index\n        respond_with @followers\n      end\n\n      def create\n        @follower.save\n        respond_with @follower, template: 'api/v1/followers/show'\n      end\n\n      def destroy\n        @follower.destroy\n        respond_with @follower, template: 'api/v1/followers/show'\n      end\n\n      def record_activity\n        super @follower\n      end\n\n      private\n\n      def load_user\n        @user = User.find(params[:user_id])\n      end\n\n      def load_resource\n        case params[:action].to_sym\n        when :index\n          @followers = @user.followers.accessible_by(current_ability).page(params[:page])\n        when :new\n          @follower = @user.followers.build\n          @follower.follower = current_user\n        when :create\n          @follower = @user.followers.build(permitted_params)\n          @follower.follower = current_user\n        else\n          @follower = Follower.find(params[:id])\n        end\n      end\n\n      def permitted_params\n        # params.require(:follower).permit()\n        {}\n      end\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[35,70],[35,70]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2106,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"2":{"id":2,"range":[[13,9],[13,17]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"3":{"id":3,"range":[[14,22],[14,30]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"4":{"id":4,"range":[[18,9],[18,17]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"5":{"id":5,"range":[[19,22],[19,30]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"6":{"id":6,"range":[[23,15],[23,23]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"7":{"id":7,"range":[[37,11],[37,19]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"8":{"id":8,"range":[[38,11],[38,19]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"9":{"id":9,"range":[[38,20],[38,28]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"10":{"id":10,"range":[[40,11],[40,19]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"11":{"id":11,"range":[[41,11],[41,19]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"12":{"id":12,"range":[[41,20],[41,28]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"13":{"id":13,"range":[[43,11],[43,19]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"14":{"id":14,"range":[[48,26],[48,34]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"15":{"id":15,"range":[[13,9],[13,17]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"16":{"id":16,"range":[[14,22],[14,30]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"17":{"id":17,"range":[[18,9],[18,17]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"18":{"id":18,"range":[[19,22],[19,30]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"19":{"id":19,"range":[[23,15],[23,23]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"20":{"id":20,"range":[[37,11],[37,19]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"21":{"id":21,"range":[[38,11],[38,19]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"22":{"id":22,"range":[[38,20],[38,28]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"23":{"id":23,"range":[[40,11],[40,19]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"24":{"id":24,"range":[[41,11],[41,19]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"25":{"id":25,"range":[[41,20],[41,28]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"26":{"id":26,"range":[[43,11],[43,19]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"27":{"id":27,"range":[[48,26],[48,34]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"28":{"id":28,"range":[[6,6],[6,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"29":{"id":29,"range":[[6,6],[6,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"30":{"id":30,"range":[[6,6],[6,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"31":{"id":31,"range":[[6,6],[6,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/followers_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"d3ef076865ed186d2d7faa87a8975eedffb648dd","deserializer":"TextBuffer"},{"text":"module Api\n  module V1\n    class CommentsController < BaseController\n      before_action :load_commentable\n      before_action :load_resource\n      after_action :record_activity, only: [:create]\n      authorize_resource\n\n      def index\n        respond_with @comments\n      end\n\n      def show\n        respond_with @comment\n      end\n\n      def create\n        @comment.save\n        respond_with @comment, template: 'api/v1/comments/show'\n      end\n\n      def update\n        @comment.update_attributes(permitted_params)\n        respond_with @comment, template: 'api/v1/comments/show'\n      end\n\n      def destroy\n        @comment.destroy\n        respond_with @comment, template: 'api/v1/comments/show'\n      end\n\n      def record_activity\n        super @comment\n      end\n\n      private\n\n      def load_commentable\n        params.each do |name, value|\n          @commentable = $1.classify.constantize.find(value) if name =~ /(.+)_id$/\n        end\n      end\n\n      def load_resource\n        case params[:action].to_sym\n        when :index\n          @comments = @commentable.comments.accessible_by(current_ability).page(params[:page])\n        when :new\n          @comment = @commentable.comments.build\n          @comment.author = current_user\n        when :create\n          @comment = @commentable.comments.build(permitted_params)\n          @comment.author = current_user\n        else\n          @comment = Comment.find(params[:id])\n        end\n      end\n\n      def permitted_params\n        params.require(:comment).permit(:comment)\n      end\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[46,75],[46,75]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2130,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/comments_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"a09f62a1c3222a4fc9a5aee66075993c1389511e","deserializer":"TextBuffer"},{"text":"module Api\n  module V1\n    class FollowingsController < BaseController\n      before_action :load_user\n      before_action :load_resource\n      authorize_resource\n\n      def index\n        respond_with @followings\n      end\n\n      private\n\n      def load_user\n        @user = User.find(params[:user_id])\n      end\n\n      def load_resource\n        case params[:action].to_sym\n        when :index\n          @followings = @user.followings.accessible_by(current_ability).page(params[:page])\n        else\n          @following = Follower.find(params[:id])\n        end\n      end\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[20,72],[20,72]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2138,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/followings_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"b78fb3739cfacfc04b745316285fb03ddb7c4884","deserializer":"TextBuffer"},{"text":"module Api\n  module V1\n    class LikesController < BaseController\n      before_action :load_video, except: [:destroy]\n      before_action :load_resource\n      after_action :record_activity, only: [:create]\n      authorize_resource\n\n      def index\n        respond_with @likes\n      end\n\n      def create\n        @like.save\n        respond_with @like, template: 'api/v1/likes/show'\n      end\n\n      def destroy\n        @like.destroy\n        respond_with @like, template: 'api/v1/likes/show'\n      end\n\n      def record_activity\n        super @like\n      end\n\n      private\n\n      def load_video\n        @video = Video.find(params[:video_id])\n      end\n\n      def load_resource\n        case params[:action].to_sym\n        when :index\n          @likes = @video.likes.accessible_by(current_ability).page(params[:page])\n        when :new\n          @like = @video.likes.build\n          @like.user = current_user\n        when :create\n          @like = @video.likes.build(permitted_params)\n          @like.user = current_user\n        else\n          @like = Like.find(params[:id])\n        end\n      end\n\n      def permitted_params\n        # params.require(:like).permit()\n        {}\n      end\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[35,63],[35,63]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2146,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/likes_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"e7cb80d8a19cd2051b133e178e76d9218ab92b6e","deserializer":"TextBuffer"},{"text":"module Api\n  module V1\n    class PromotionCategoriesController < BaseController\n      before_action :load_resource\n      authorize_resource\n\n      def index\n        respond_with @promotion_categories\n      end\n\n      def show\n        respond_with @promotion_category\n      end\n\n      def create\n        @promotion_category.save\n        respond_with @promotion_category, template: 'api/v1/promotion_categories/show'\n      end\n\n      def update\n        @promotion_category.update_attributes(permitted_params)\n        respond_with @promotion_category, template: 'api/v1/promotion_categories/show'\n      end\n\n      def destroy\n        @promotion_category.destroy\n        respond_with @promotion_category, template: 'api/v1/promotion_categories/show'\n      end\n\n      private\n\n      def load_resource\n        case params[:action].to_sym\n        when :index\n          @promotion_categories = PromotionCategory.accessible_by(current_ability).page(params[:page])\n        when :new\n          @promotion_category = PromotionCategory.new\n        when :create\n          @promotion_category = PromotionCategory.new(permitted_params)\n        else\n          @promotion_category = PromotionCategory.find(params[:id])\n        end\n      end\n\n      def permitted_params\n        params.require(:promotion_category).permit(:name, :description, :image)\n      end\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[34,83],[34,83]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2154,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/promotion_categories_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"c4d3af1bfe5cbae6ec256588eaed35d0ed3931e1","deserializer":"TextBuffer"},{"text":"module Api\n  module V1\n    class PromotionItemsController < BaseController\n      before_action :load_promotion_category, only: [:index, :show]\n      before_action :load_resource\n      authorize_resource\n\n      def index\n        respond_with @promotion_items\n      end\n\n      def create\n        @promotion_item.save\n        respond_with @promotion_item, template: 'api/v1/promotion_items/show'\n      end\n\n      def destroy\n        @promotion_item.destroy\n        respond_with @promotion_item, template: 'api/v1/promotion_items/show'\n      end\n\n      private\n\n      def load_promotion_category\n        @promotion_category = PromotionCategory.find(params[:promotion_category_id])\n      end\n\n      def load_resource\n        case params[:action].to_sym\n        when :index\n          @promotion_items = @promotion_category.promotion_items.accessible_by(current_ability).page(params[:page])\n        when :new\n          @promotion_item = @promotion_category.promotion_items.build\n        when :create\n          @promotion_item = @promotion_category.promotion_items.build(permitted_params)\n        else\n          @promotion_item = PromotionItem.find(params[:id])\n        end\n      end\n\n      def permitted_params\n        params.require(:promotion_item).permit(:promoted_type, :promoted_id)\n      end\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[30,96],[30,96]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2162,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/promotion_items_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"982a8aa81cc02cf2d3d0ad5563e52fbe13578fd2","deserializer":"TextBuffer"},{"text":"module Api\n  module V1\n    class TagsController < BaseController\n      before_action :load_resource\n      authorize_resource\n\n      def index\n        respond_with @tags\n      end\n\n      def show\n        respond_with @tag\n      end\n\n      private\n\n      def load_resource\n        case params[:action].to_sym\n        when :index\n          context = Tag.order('taggings_count DESC')\n          context = context.search(params[:search]) if params[:search]\n          @tags = context.accessible_by(current_ability).page(params[:page])\n        else\n          @tag = Tag.find(params[:id])\n        end\n      end\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[29,0],[29,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2170,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/tags_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"6808e75464fd749ed14eb7185dbc671d72a63628","deserializer":"TextBuffer"},{"text":"module Api\n  module V1\n    class UsersController < BaseController\n      before_action :load_resource\n      authorize_resource\n\n      def index\n        respond_with @users\n      end\n\n      def show\n        respond_with @user\n      end\n\n      private\n\n      def load_resource\n        case params[:action].to_sym\n        when :index\n          context = User\n          context = context.search(params[:search]) if params[:search]\n          @users = context.page(params[:page])\n        when :new\n          @user = User.new\n        when :create\n          @user = User.new(permitted_params)\n        else\n          @user = User.find(params[:id])\n        end\n      end\n\n      def permitted_params\n        params.require(:user).permit(:username, :email, :password, :password_confirmation)\n      end\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[4,6],[4,6]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2178,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/users_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"8c0e442b80e2f195ec18418b0f43fd6b19eea4e6","deserializer":"TextBuffer"},{"text":"module Api\n  module V1\n    class VideosController < BaseController\n      before_action :load_user, only: [:index]\n      before_action :load_resource\n      after_action :record_activity, only: [:create]\n      authorize_resource\n\n      def index\n        respond_with @videos\n      end\n\n      def show\n        respond_with @video\n      end\n\n      def create\n        @video.save\n        respond_with @video, template: 'api/v1/videos/show'\n      end\n\n      def update\n        @video.update_attributes(permitted_params)\n        respond_with @video, template: 'api/v1/videos/show'\n      end\n\n      def destroy\n        @video.destroy\n        respond_with @video, template: 'api/v1/videos/show'\n      end\n\n      def record_activity\n        super @video\n      end\n\n      private\n\n      def load_user\n        @user = User.find(params[:user_id]) if params[:user_id]\n      end\n\n      def load_resource\n        case params[:action].to_sym\n        when :index\n          context = Video\n          context = @user.videos if @user\n          context = context.search(params[:search]) if params[:search]\n          @videos = context.page(params[:page])\n        when :new\n          @video = Video.new\n          @video.author = current_user\n        when :create\n          @video = Video.new(permitted_params)\n          @video.author = current_user\n        else\n          @video = Video.find(params[:id])\n        end\n      end\n\n      def permitted_params\n        params.require(:video).permit(\n          :title, :description, :tag_list,\n          video_file_attributes: [:file, :length, :width, :height, :source, :format]\n        )\n      end\n    end\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[6,6],[6,6]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2186,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/videos_controller.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"8115d82100ffaf24630642f6f11594666c2dc540","deserializer":"TextBuffer"},{"text":"web: bundle exec puma -C config/puma.rb\nresq: env QUEUES=critical,high,low TERM_CHILD=1 RESQUE_TERM_TIMEOUT=10 bundle exec rake environment resque:work\nsche: env QUEUES=critical,high,low TERM_CHILD=1 RESQUE_TERM_TIMEOUT=10 bundle exec rake environment resque:scheduler\n","markers":{"markers":{"1":{"id":1,"range":[[3,0],[3,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2369,"goalBufferRange":null,"autoscroll":false,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/Procfile","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"a704d5a8459e0c5ebfdc2fd771e74e36d7d16574","deserializer":"TextBuffer"},{"text":"environment ENV['RACK_ENV']\nbind \"tcp://0.0.0.0:#{ENV['PORT']}\"\n\nthreads ENV['MIN_THREADS'], ENV['MAX_THREADS']\nworkers ENV['WORKERS']\npreload_app!\n\non_worker_boot do\n  ActiveSupport.on_load(:active_record) do\n    ActiveRecord::Base.establish_connection\n  end\nend\n","markers":{"markers":{"1":{"id":1,"range":[[12,0],[12,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2373,"goalBufferRange":null,"autoscroll":false,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/config/puma.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"05c7f78121f1b69f4943cf369c7a9909728a0e09","deserializer":"TextBuffer"},{"text":"ACTIVE_API=v1\nRACK_ENV=development\nPORT=3000\nMIN_THREADS=10\nMAX_THREADS=10\nWORKERS=2\nDB_REAP_FREQ=10\nDB_POOL=5\nJOBS_PER_FORK=1000\nCOUNT_WORKER=1\nQUEUE=vf_api\nDYNAMIC_SCHEDULE=1\n","markers":{"markers":{"1":{"id":1,"range":[[12,0],[12,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2381,"goalBufferRange":null,"autoscroll":false,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/.env","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"8fdbd5345cd05eff4075c65671e8040c8fdb6e98","deserializer":"TextBuffer"},{"text":"require 'resque/tasks'\nrequire 'resque_scheduler/tasks'\n\ntask 'resque:setup' => :environment do\n  require 'resque'\n  require 'resque_scheduler'\n  ENV['QUEUES'] ||= 'critical,high,low'\nend\n\ntask \"resque:preload\" => :environment do\nend\n\ndesc 'Clear pending tasks'\ntask 'resque:clear' => :environment do\n  Resque.queues.each do |queue_name|\n    puts \"Clearing #{queue_name}...\"\n    Resque.redis.del \"queue:#{queue_name}\"\n  end\n\n  puts 'Clearing delayed...'\n  Resque.redis.keys('delayed:*').each do |key|\n    Resque.redis.del \"#{key}\"\n  end\n  Resque.redis.del 'delayed_queue_schedule'\n\n  puts 'Clearing stats...'\n  Resque.redis.set 'stat:failed', 0\n  Resque.redis.set 'stat:processed', 0\nend\n","markers":{"markers":{"1":{"id":1,"range":[[1,0],[2,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2390,"goalBufferRange":null,"autoscroll":false,"preserveFolds":true},"deserializer":"Marker"},"2":{"id":2,"range":[[1,9],[1,25]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"3":{"id":3,"range":[[5,11],[5,27]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/lib/tasks/resque.rake","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"06c609bb55db2553c084bce495e9b9df5d3895be","deserializer":"TextBuffer"},{"text":"class ApplicationResponder < ActionController::Responder\n  include Responders::FlashResponder\n  include Responders::HttpCacheResponder\n\n  # Uncomment this responder if you want your resources to redirect to the collection\n  # path (index action) instead of the resource path for POST/PUT/DELETE requests.\n  # include Responders::CollectionResponder\nend\n","markers":{"markers":{"1":{"id":1,"range":[[8,0],[8,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2394,"goalBufferRange":null,"autoscroll":false,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/lib/application_responder.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"af189435f39595d5b1bab7df67f3a5ea64e6b75a","deserializer":"TextBuffer"},{"text":"videofy-defaults\nvideofy-api\n","markers":{"markers":{"1":{"id":1,"range":[[2,0],[2,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2398,"goalBufferRange":null,"autoscroll":false,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/.rbenv-gemsets","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"59cd084045020d5eab33acf96ab6e0f51597ac94","deserializer":"TextBuffer"},{"text":"2.1.2\n","markers":{"markers":{"1":{"id":1,"range":[[1,0],[1,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2402,"goalBufferRange":null,"autoscroll":false,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/.ruby-version","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"c5cc20339d1ecb09a252aeef3d5417cd4d802473","deserializer":"TextBuffer"},{"text":"source 'https://api.berkshelf.com'\n\ncookbook 'apt'\ncookbook 'postgresql',  git: 'https://github.com/phlipper/chef-postgresql', tag: '0.13.3'\ncookbook 'redisio',     git: 'https://github.com/brianbianco/redisio',      tag: '1.7.1'\ncookbook 'ruby_build',  git: 'https://github.com/fnichol/chef-ruby_build'\ncookbook 'rbenv',       git: 'https://github.com/fnichol/chef-rbenv'\ncookbook 'mongodb',     git: 'https://github.com/edelight/chef-mongodb'\n","markers":{"markers":{"1":{"id":1,"range":[[8,0],[8,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2406,"goalBufferRange":null,"autoscroll":false,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/Berksfile","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"3d3d9074a034b52c31132edae365faf861ba38fc","deserializer":"TextBuffer"},{"text":"# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVAGRANTFILE_API_VERSION = '2'\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  config.vm.hostname = 'videofy-api'\n\n  config.vm.box = 'chef/ubuntu-14.04'\n\n  # Disable automatic box update checking. If you disable this, then\n  # boxes will only be checked for updates when the user runs\n  # `vagrant box outdated`. This is not recommended.\n  # config.vm.box_check_update = false\n\n  # Create a forwarded port mapping which allows access to a specific port\n  # within the machine from a port on the host machine. In the example below,\n  # accessing \"localhost:8080\" will access port 80 on the guest machine.\n  config.vm.network :forwarded_port, guest: 3000, host: 8080\n\n  # If true, then any SSH connections made will enable agent forwarding.\n  # Default value: false\n  # config.ssh.forward_agent = true\n\n  # config.vm.provider :virtualbox do |vb|\n  #   vb.customize ['modifyvm', :id, '--memory', '768']\n  #   vb.customize ['modifyvm', :id, '--cpus', '2']\n  #   vb.customize ['modifyvm', :id, '--ioapic', 'on']\n  # end\n  config.vm.provider :vmware_fusion do |vf|\n    vf.vmx['memsize'] = '768'\n    vf.vmx['numvcpus'] = '2'\n  end\n\n  config.vm.provision :shell, inline: 'apt-get update --fix-missing'\n  config.vm.provision :shell, inline: 'DEBIAN_FRONTEND=noninteractive aptitude install -y chef git libxslt-dev libxml2-dev libpq-dev libmagickwand-dev postgresql-contrib'\n\n  config.berkshelf.enabled = true\n\n  config.vm.provision :chef_solo do |chef|\n    chef.custom_config_path = 'Vagrantfile.chef'\n    chef.add_recipe 'postgresql'\n    chef.add_recipe 'postgresql::client'\n    chef.add_recipe 'postgresql::server'\n    chef.add_recipe 'redisio'\n    chef.add_recipe 'redisio::install'\n    chef.add_recipe 'redisio::enable'\n    chef.add_recipe 'ruby_build'\n    chef.add_recipe 'rbenv::user_install'\n    chef.add_recipe 'rbenv::vagrant'\n    chef.add_recipe 'mongodb::default'\n\n    chef.json = {\n      postgresql: {\n        version: '9.3',\n        users: [{\n          username: 'vagrant',\n          password: 'postgres',\n          superuser: true,\n          createdb: true,\n          login: true\n        }]\n      },\n      rbenv: {\n        user_installs: [\n          { user: 'vagrant' }\n        ]\n      }\n    }\n  end\n\n  config.vm.provision :shell, inline: 'echo \\'eval \"$(rbenv init -)\"\\' >> /home/vagrant/.bashrc'\n  config.vm.provision :shell, inline: 'source /home/vagrant/.bashrc'\n  config.vm.provision :shell, inline: 'mkdir -p /home/vagrant/.rbenv/plugins'\n  config.vm.provision :shell, inline: 'git clone git://github.com/tpope/rbenv-aliases.git /home/vagrant/.rbenv/plugins/rbenv-aliases'\n  config.vm.provision :shell, inline: 'git clone git://github.com/sstephenson/rbenv-gem-rehash.git /home/vagrant/.rbenv/plugins/rbenv-gem-rehash'\n  config.vm.provision :shell, inline: 'git clone git://github.com/jf/rbenv-gemset.git /home/vagrant/.rbenv/plugins/rbenv-gemset'\n\n  # Do the following yourself as the vagrant user on the machine:\n  # cd /vagrant\n  # rbenv install\n  # rbenv rehash\n  # gem install bundler --no-ri --no-rdoc\n  # bundle\n  # bundle exec rake db:setup\nend\n","markers":{"markers":{"1":{"id":1,"range":[[50,38],[50,38]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2410,"goalBufferRange":null,"autoscroll":false,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/Vagrantfile","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"477e9fbf461cdfe70d2cc391a027671d9860f8e3","deserializer":"TextBuffer"},{"text":"Chef::Config.ssl_verify_mode = :verify_peer\n","markers":{"markers":{"1":{"id":1,"range":[[1,0],[1,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2414,"goalBufferRange":null,"autoscroll":false,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/Vagrantfile.chef","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"0dd41b49f36ad4a906df3aced68eb3edce489f54","deserializer":"TextBuffer"},{"text":"ENV['REDIS_URL'] ||= 'redis://127.0.0.1:6379'\n\nuri = URI.parse(ENV['REDIS_URL'])\n\nResque.redis = Redis.new(host: uri.host, port: uri.port, password: uri.password, thread_safe: true)\nResque.redis.namespace = 'resque:vf_api'\n\nrequire 'resque_scheduler'\n\nDir[\"#{Rails.root}/app/workers/*.rb\"].each { |file| require file }\n# Resque.schedule = YAML.load_file(Rails.root.join('config', 'resque_schedule.yml'))\n\nResque.after_fork do |job|\n  ActiveRecord::Base.establish_connection\n  Resque.redis.client.reconnect\nend\n\nif Rails.env.development?\n  Resque.logger = Logger.new STDOUT\n  Resque.logger.level = Logger::DEBUG\nend\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[21,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2622,"goalBufferRange":null,"autoscroll":false},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/config/initializers/resque.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"00230f380fa85b09df4ce7e968a51f8b016604fe","deserializer":"TextBuffer"},{"text":"","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2626,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/config/resque_schedule.yml","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"da39a3ee5e6b4b0d3255bfef95601890afd80709","deserializer":"TextBuffer"},{"text":"# Add your own tasks in files placed in lib/tasks ending in .rake,\n# for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.\n\nrequire File.expand_path('../config/application', __FILE__)\n\nrequire 'resque/tasks'\nrequire 'resque_scheduler/tasks'\n\nRails.application.load_tasks\n","markers":{"markers":{"1":{"id":1,"range":[[5,0],[7,0]],"tailed":true,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2634,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/Rakefile","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"22752b425ca8ef97d938cf01c65df5707a7d099e","deserializer":"TextBuffer"},{"text":"# PostgreSQL. Versions 8.2 and up are supported.\n#\n# Install the pg driver:\n#   gem install pg\n# On OS X with Homebrew:\n#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config\n# On OS X with MacPorts:\n#   gem install pg -- --with-pg-config=/opt/local/lib/postgresql84/bin/pg_config\n# On Windows:\n#   gem install pg\n#       Choose the win32 build.\n#       Install PostgreSQL and put its /bin directory on your path.\n#\n# Configure Using Gemfile\n# gem 'pg'\n#\ndefault: &default\n  adapter: postgresql\n  encoding: unicode\n  # For details on connection pooling, see rails configuration guide\n  # http://guides.rubyonrails.org/configuring.html#database-pooling\n  pool: 5\n\ndevelopment:\n  <<: *default\n  database: api_development\n\n  # The specified database role being used to connect to postgres.\n  # To create additional roles in postgres see `$ createuser --help`.\n  # When left blank, postgres will use the default role. This is\n  # the same name as the operating system user that initialized the database.\n  username: vagrant\n\n  # The password associated with the postgres role (username).\n  password: postgres\n\n  # Connect on a TCP socket. Omitted by default since the client uses a\n  # domain socket that doesn't need configuration. Windows does not have\n  # domain sockets, so uncomment these lines.\n  #host: localhost\n\n  # The TCP port the server listens on. Defaults to 5432.\n  # If your server runs on a different port number, change accordingly.\n  #port: 5432\n\n  # Schema search path. The server defaults to $user,public\n  #schema_search_path: myapp,sharedapp,public\n\n  # Minimum log levels, in increasing order:\n  #   debug5, debug4, debug3, debug2, debug1,\n  #   log, notice, warning, error, fatal, and panic\n  # Defaults to warning.\n  #min_messages: notice\n\n# Warning: The database defined as \"test\" will be erased and\n# re-generated from your development database when you run \"rake\".\n# Do not set this db to the same as development or production.\ntest:\n  <<: *default\n  database: api_test\n\n# As with config/secrets.yml, you never want to store sensitive information,\n# like your database password, in your source code. If your source code is\n# ever seen by anyone, they now have access to your database.\n#\n# Instead, provide the password as a unix environment variable when you boot\n# the app. Read http://guides.rubyonrails.org/configuring.html#configuring-a-database\n# for a full rundown on how to provide these environment variables in a\n# production deployment.\n#\n# On Heroku and other platform providers, you may have a full connection URL\n# available as an environment variable. For example:\n#\n#   DATABASE_URL=\"postgres://myuser:mypass@localhost/somedatabase\"\n#\n# You can use this database configuration with:\n#\n#   production:\n#     url: <%= ENV['DATABASE_URL'] %>\n#\nproduction:\n  <<: *default\n  database: api_production\n  username: api\n  password: <%= ENV['API_DATABASE_PASSWORD'] %>\n","markers":{"markers":{"1":{"id":1,"range":[[34,2],[34,20]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":2642,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sytze/Sites/Videofy/api/config/database.yml","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"1a624728f8f12bc38e593720ca9f683e7442650e","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":2025,"softTabs":true,"displayBuffer":{"id":2026,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/models/authentication.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2033,"softTabs":true,"displayBuffer":{"id":2034,"softWrap":false,"editorWidthInChars":387,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/Gemfile","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2634,"softTabs":true,"displayBuffer":{"id":2635,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/Rakefile","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2642,"softTabs":true,"displayBuffer":{"id":2643,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/config/database.yml","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2622,"softTabs":true,"displayBuffer":{"id":2623,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/config/initializers/resque.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2626,"softTabs":true,"displayBuffer":{"id":2627,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/config/resque_schedule.yml","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2373,"softTabs":true,"displayBuffer":{"id":2374,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/config/puma.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2381,"softTabs":true,"displayBuffer":{"id":2382,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/.env","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2390,"softTabs":true,"displayBuffer":{"id":2391,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/lib/tasks/resque.rake","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2394,"softTabs":true,"displayBuffer":{"id":2395,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/lib/application_responder.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2398,"softTabs":true,"displayBuffer":{"id":2399,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/.rbenv-gemsets","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2402,"softTabs":true,"displayBuffer":{"id":2403,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/.ruby-version","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2406,"softTabs":true,"displayBuffer":{"id":2407,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/Berksfile","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2410,"softTabs":true,"displayBuffer":{"id":2411,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/Vagrantfile","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2414,"softTabs":true,"displayBuffer":{"id":2415,"softWrap":false,"editorWidthInChars":131,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/Vagrantfile.chef","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2042,"softTabs":true,"displayBuffer":{"id":2043,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/models/ability.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2106,"softTabs":true,"displayBuffer":{"id":2107,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/followers_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2138,"softTabs":true,"displayBuffer":{"id":2139,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/followings_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2146,"softTabs":true,"displayBuffer":{"id":2147,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/likes_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2154,"softTabs":true,"displayBuffer":{"id":2155,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/promotion_categories_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2162,"softTabs":true,"displayBuffer":{"id":2163,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/promotion_items_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2170,"softTabs":true,"displayBuffer":{"id":2171,"softWrap":false,"editorWidthInChars":387,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/tags_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2369,"softTabs":true,"displayBuffer":{"id":2370,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/Procfile","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2178,"softTabs":true,"displayBuffer":{"id":2179,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/users_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2186,"softTabs":true,"displayBuffer":{"id":2187,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/videos_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2098,"softTabs":true,"displayBuffer":{"id":2099,"softWrap":false,"editorWidthInChars":387,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/models/user.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2050,"softTabs":true,"displayBuffer":{"id":2051,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/activities_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2130,"softTabs":true,"displayBuffer":{"id":2131,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/comments_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2058,"softTabs":true,"displayBuffer":{"id":2059,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/base_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2082,"softTabs":true,"displayBuffer":{"id":2083,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/controllers/api/base_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":2066,"softTabs":true,"displayBuffer":{"id":2067,"softWrap":false,"editorWidthInChars":391,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sytze/Sites/Videofy/api/app/controllers/application_controller.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/sytze/Sites/Videofy/api/app/models/user.rb","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":true,"deserializer":"Workspace"},"packageStates":{"find-and-replace":{"projectViewState":{"findHistory":[],"replaceHistory":[],"pathsHistory":[],"modelState":{"useRegex":false,"caseSensitive":false}},"resultsModelState":{"useRegex":false,"caseSensitive":false}},"fuzzy-finder":{"/Users/sytze/Sites/Videofy/api/app/models/authentication.rb":1402500363528,"/Users/sytze/Sites/Videofy/api/Gemfile":1402499298910,"/Users/sytze/Sites/Videofy/api/Rakefile":1402499311734,"/Users/sytze/Sites/Videofy/api/config/database.yml":1402499381590,"/Users/sytze/Sites/Videofy/api/config/initializers/resque.rb":1402499231556,"/Users/sytze/Sites/Videofy/api/config/resque_schedule.yml":1402499261594,"/Users/sytze/Sites/Videofy/api/config/puma.rb":1402493903244,"/Users/sytze/Sites/Videofy/api/.env":1402493931181,"/Users/sytze/Sites/Videofy/api/lib/tasks/resque.rake":1402499293550,"/Users/sytze/Sites/Videofy/api/lib/application_responder.rb":1402493985862,"/Users/sytze/Sites/Videofy/api/.rbenv-gemsets":1402493991292,"/Users/sytze/Sites/Videofy/api/.ruby-version":1402494010757,"/Users/sytze/Sites/Videofy/api/Berksfile":1402494031934,"/Users/sytze/Sites/Videofy/api/Vagrantfile":1402494048661,"/Users/sytze/Sites/Videofy/api/Vagrantfile.chef":1402499147931,"/Users/sytze/Sites/Videofy/api/app/models/ability.rb":1401967136393,"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/followers_controller.rb":1401967249865,"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/followings_controller.rb":1401967258873,"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/likes_controller.rb":1401967263347,"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/promotion_categories_controller.rb":1401967271041,"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/promotion_items_controller.rb":1401967276037,"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/tags_controller.rb":1402493774625,"/Users/sytze/Sites/Videofy/api/Procfile":1402493785569,"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/users_controller.rb":1401967219814,"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/videos_controller.rb":1401967223954,"/Users/sytze/Sites/Videofy/api/app/models/user.rb":1402500722139,"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/activities_controller.rb":1401967230293,"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/comments_controller.rb":1401967237665,"/Users/sytze/Sites/Videofy/api/app/controllers/api/v1/base_controller.rb":1401960216344,"/Users/sytze/Sites/Videofy/api/app/controllers/api/base_controller.rb":1402500136921,"/Users/sytze/Sites/Videofy/api/app/controllers/application_controller.rb":1402500133822},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":54423281},"tree-view":{"directoryExpansionStates":{"app":{"controllers":{"api":{"v1":{}}},"helpers":{"api":{}},"models":{"concerns":{}},"views":{"api":{"v1":{"activities":{},"followers":{},"likes":{},"tags":{},"users":{},"videos":{}}}}},"config":{"initializers":{}},"db":{"migrate":{}},"lib":{"tasks":{}},"spec":{"factories":{},"models":{},"support":{}}},"selectedPath":"/Users/sytze/Sites/Videofy/api/app/models/user.rb","hasFocus":false,"attached":true,"scrollLeft":27,"scrollTop":10,"width":200},"run-command":{}}}